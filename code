module logic_gates (
    input wire A, B,
    output wire AND_out,
    output wire OR_out,
    output wire NOT_A
);

// Logic gate implementations
assign AND_out = A & B;   // AND Gate
assign OR_out = A | B;    // OR Gate
assign NOT_A = ~A;        // NOT Gate

endmodule

// Testbench
module testbench;
    reg A, B;
    wire AND_out, OR_out, NOT_A;

    logic_gates uut (.A(A), .B(B), .AND_out(AND_out), .OR_out(OR_out), .NOT_A(NOT_A));

    initial begin
        $monitor("A=%b B=%b | AND=%b OR=%b NOT_A=%b", A, B, AND_out, OR_out, NOT_A);

        // Test cases
        A = 0; B = 0; #10;
        A = 0; B = 1; #10;
        A = 1; B = 0; #10;
        A = 1; B = 1; #10;

        $finish;
    end
endmodule
